function [y1] = HDO_detection_ANN(x1)
%
% Chris Lippe, 2022
%
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 20-Nov-2021 23:09:32.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx21 matrix, input #1
% and returns:
%   y = Qx1 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.146100880590869;0.147417775537139;0.261946693306132;0.19406725844615;0.455541348633449;0.418750373239958;0.295228913043988;0.549750038468437;0.468289490213988;0.499459678569659;0.467681829300824;0.490841819616941;0.430605796325099;0.388527669618342;0.403266838415568;0.368727304078656;-0.0476003191250706;-0.493320688927374;-0.457291455020769;-0.188780292410507;-0.0385656416562608];
x1_step1.gain = [1.19354466542354;1.34221140837571;1.25700925497813;1.23168974881735;1.53511153563296;0.929449166771168;0.611639637432704;0.676884565751467;0.556353706578965;0.734374375312758;1.3919171873452;1.36497467238193;1.91082493470429;1.86453382737103;1.64718727874677;1.68139607525067;4.8556569709075;3.67731547906127;3.99938117671183;4.56895487970222;3.51886417591902];
x1_step1.ymin = -1;

% Layer 1
b1 = [1.5948797937413914383;-0.75493323837059933545;-1.813129150563974834;2.1905848172460715695;-0.72276144824372445807;1.6764842921653646535;0.10813105310102405499;-1.1496197248818242898;1.6064781979564792813;-0.58500606548072542346];
IW1_1 = [-0.36834125528564437557 -0.40697659371953759377 0.33882742597348430857 -0.041889246241559527362 0.46445009932846031964 0.36232769616365589904 -0.55832607393090161185 0.27310495623973507495 -0.077480723642376903015 -0.41175267227941325654 -0.40312257814343988027 -0.11129852516009929031 0.31595411727005395797 0.43455692975026194436 0.24823475521384474884 0.17793931385816574853 -0.52269043530666992048 0.30493501403888306767 -0.14411276161461569756 -0.14685180470291511745 0.40516196186762970521;0.13075826300741569264 -0.3113041943943786749 -0.58926447859794295336 -0.3172610783192874595 -0.26705075494087693322 -0.51163601985400108951 -0.30437940060194873526 -0.41885232437966674057 0.55515453316365037661 -0.25615999866676802954 0.62266794678359438375 -0.66357695940672734025 0.0062616624593679190078 0.27503868895307997944 -0.25684686930866995613 -1.4196365484625590447 -0.15851057506602569958 -0.67010824780270972223 0.48582254911245525975 0.33301595679845186204 0.39858091111567917064;0.40320299555500138666 1.6075633459455258567 0.30293626061448930553 1.4680135586566465111 1.9645751767917223329 -0.12250314600762428341 -0.76220101142742224809 -1.2871685997350366115 0.53667858123275413718 1.0494349494453658611 -0.36828166187050714875 0.15294253603812285602 -0.23303871643253029622 1.6493736841341499755 0.85788132314472020923 2.4356598877524247015 -0.90320473191415340253 0.5943013807395209902 0.050458038728907701753 -0.2836560844815042004 -0.84562056381584194131;-4.4117943237903194387 -1.5871099539741904128 -2.0150439284393466544 -1.4220442647498352517 1.5188310449536988056 0.38495256897219271019 1.3093966520786421981 4.2364819186765680925 1.7816352224320937125 -3.3213646806499950159 -2.4065982193095090125 -2.2833087391882225248 -1.7667811415816658815 -2.4023029520966794337 -3.0773007070822986364 -1.4971664655595511295 1.6998008071396566443 -0.89258956320496496417 -1.4464661414598312117 -0.80372289905889149342 1.8747737189705893091;-1.5963488773377862984 2.5297693644471825891 -0.36435727208058793503 1.4521992776234025069 2.1574464668438109172 0.90856395292013281129 0.38711099765917567073 -0.77722425050772336874 -0.26912023010157548608 -1.5310961560864566611 -1.5331032558401485044 -2.4679339530297257355 0.7913169420537261578 -0.21383726003368691559 2.8041725931727254917 4.8793871996182858197 0.63250416278725662966 2.6207312667512461246 -0.33265955338750047288 -2.539806977862298254 -0.86617819636470538835;0.083343117827493554128 -0.98043661543922300261 -1.5440275088104906676 -3.1329541274107004512 -0.80441332423174771726 0.26556370823434027884 0.35844639629184799068 0.56086906622192722605 -0.059987751519259426003 -1.0551729809388601389 -1.0191554522554600037 0.39770808864518836234 -1.0273967631499785202 -0.032383622215513503673 -2.470866913837565626 -1.8385482218493434114 0.068503762349598706916 -1.8835468210345218676 -0.33901142643578890956 0.47656155475843947622 1.1011128806021288629;0.098620171066282610872 0.33328886206131930203 -0.41133363160214331256 -0.077636428187461969941 0.46160876714844328861 0.4903021515165323363 -0.17088928498894676022 -0.0075995856370511122302 -0.13970881735210896601 0.75012285417918511676 -0.31674467365372921401 0.51297020242570257054 1.1079634142692849075 -0.61307329846601832379 0.68983943853014950687 0.66185963077089648987 -0.28762360747787735216 -0.27962411727261043959 0.034088331132827560943 -0.062023490358257403476 0.33498116681176492992;-0.28470703376087586056 0.47610867814310514623 0.0058213232667593504954 0.48981424313794075243 0.63253029111102021531 -0.13267529383901283113 0.47194571917768818325 0.5501910415237891705 0.038705273745865943769 0.52285602349675919243 0.38792466114737561567 0.30573234614415101262 -0.43945581921428061856 -0.33115033656047049293 0.096097041616386061347 0.21293966775068362551 -0.24985780955380854085 0.081414275273957503742 0.2328810869128818406 0.24711346157628796827 0.42739386496551118322;0.44035538881845087689 0.31499929419949679321 -0.16441610856748084535 0.41152603626750716703 -0.017912047727239817363 -0.57201398684081727897 0.59400961735807578101 0.18811635098620763107 -0.26497930958655008249 0.41820085048768063096 -0.32463838808728689989 0.17727926719284931023 -0.43532692744048639977 -0.0096560328126792088071 -0.052950314037178015936 -0.048870668658837282394 0.072062968926416434701 -0.029508382943412625465 0.060551962256062706602 0.084023496283735843448 -0.6780237697787590001;-1.2275849626229231593 -0.39981041353525081927 -0.6702567075298194732 -1.3807026592252347186 0.38454269843987409772 0.015960657923118196089 1.0882393044564515616 1.0520683951057652195 -0.18919754310730449443 -1.68404001120758684 -1.3368410602325151437 -1.8527465005371539508 -0.98648949751224235261 -0.72597242815743401323 -1.1767916373436240196 -0.92440625416467081532 1.1251555896182694472 0.36271815718805239248 -1.272246932752610471 -0.18138556335535610531 0.71729477701344868112];

% Layer 2
b2 = 2.1303418903269482065;
LW2_1 = [0.76238108545506355629 1.4280450179948742662 -4.8857571006825422089 11.192072387543710477 -11.063933737580486039 5.8409285170907505602 -1.8455703306204178649 -1.521785841745395329 1.7930572703135314594 2.9061049207960003571];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);

% Output 1
y1 = a2;
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n,~)
a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end
